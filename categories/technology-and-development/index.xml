<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>technology and development on Derry Dev Blog</title>
    <link>https://derry.club/categories/technology-and-development/</link>
    <description>Recent content in technology and development on Derry Dev Blog</description>
    <image>
      <url>https://derry.club/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://derry.club/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 15 Jan 2023 18:52:27 +0000</lastBuildDate><atom:link href="https://derry.club/categories/technology-and-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jpa Cheat Sheet for annotations</title>
      <link>https://derry.club/posts/java/jpa-cheat-sheet/</link>
      <pubDate>Sun, 15 Jan 2023 18:52:27 +0000</pubDate>
      
      <guid>https://derry.club/posts/java/jpa-cheat-sheet/</guid>
      <description>Entity @Entity - marks class as the database entity @Entity public class Pokemon{} @Table - table name @Table(name = &amp;#34;Poke&amp;#34;) public class Pokemon { } @Id - mark the primary key Annotate primary key
@Id private int id; @GeneratedValue - the strategy for primary key GenerationType
@Id @GeneratedValue(strategy = GenerationType.IDENTITY) private int id; GenerationType.IDENTITY The database is set AUTO_INCREMENT.
Similar to SQL id NOT NULL AUTO_INCREMENT
GenerationType.SQUENCE GenerationType.TABLE Use the TABLE in database to set the primary key for us, instead of the DBMS system.</description>
    </item>
    
    <item>
      <title>Docker Cheat sheet, a general cheat sheet for all use case</title>
      <link>https://derry.club/posts/docker-cheatsheet/</link>
      <pubDate>Sun, 08 Jan 2023 17:32:01 +0000</pubDate>
      
      <guid>https://derry.club/posts/docker-cheatsheet/</guid>
      <description>Docker general Help - docker COMMAND --help This is for each command&amp;rsquo;s detail
For example, docker run --help
TL;DR docker run &amp;lt;image&amp;gt; - to initialize a new container docker start &amp;lt;container_name&amp;gt; start running the &amp;ldquo;stopped&amp;rdquo; container docker stop &amp;lt;container_name&amp;gt; docker run - Initialize a container Run a command in a new container
Usage: docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
Basic form to initialize a container, or to run a command</description>
    </item>
    
    <item>
      <title>Spring Boot Controller Service Repository</title>
      <link>https://derry.club/posts/java/spring-boot-controller-service-repository/</link>
      <pubDate>Sun, 01 Jan 2023 16:54:27 +0000</pubDate>
      
      <guid>https://derry.club/posts/java/spring-boot-controller-service-repository/</guid>
      <description>Spring RESTful service Laur Spilca Youtube Tutorial series
spring docs
Spring Restful service is a popular backend application. The architecture usually is made up with 3 layers: Controller, Service, and Repository.
Configuration setup @SpringBootApplication - define the app root The start point of program It&amp;rsquo;s with @ComponentScan - tell spring to create beans in which the classes have been annotated with. Spring RESTful Service architecture Spring RESTful service usually has this architecture.</description>
    </item>
    
    <item>
      <title>Curl cheat sheet, for web developement</title>
      <link>https://derry.club/posts/curl/</link>
      <pubDate>Sun, 18 Dec 2022 20:42:21 +0000</pubDate>
      
      <guid>https://derry.club/posts/curl/</guid>
      <description>HTTP Request Specify Method by -X Form:
curl -X &amp;lt;METHOD&amp;gt; &amp;lt;URI&amp;gt; By default, it uses GET method
curl https://www.google.com/ # same as curl -X GET https://www.google.com/ Use Post simply by:
curl -X POST https://www.example.com/ GET Get entire document of the website in terminal
curl https://www.google.com/ POST curl -X POST https://example.com/ More complex, pass data, -d and header -H to server. Below shows POST with json body
curl -d &amp;#39;{&amp;#34;option&amp;#34;: &amp;#34;value&amp;#34;, &amp;#34;something&amp;#34;: &amp;#34;anothervalue&amp;#34;}&amp;#39; \ -H &amp;#34;Content-Type: application/json&amp;#34; \ -X POST https://example.</description>
    </item>
    
    <item>
      <title>Java Abstract Class and how to use it? When we combine it with interface?</title>
      <link>https://derry.club/posts/java/abstract-class/</link>
      <pubDate>Sun, 11 Dec 2022 08:32:40 +0000</pubDate>
      
      <guid>https://derry.club/posts/java/abstract-class/</guid>
      <description>Java abstract class An abstract class is like a structure of data. However, unlike interface, it can define methods and attribute. You can view it as an enforced blueprint for an object. You cannot initiate an object from it but from its sub-classes.
An abstract class is:
It cannot be instantiated It can contain constructor and object fields. Contains abstract method (0 to many), and concrete methods Its subclasses must override its abstract method An abstract class example:</description>
    </item>
    
    <item>
      <title>Java IO package - What is RandomAccessFile and how to use it</title>
      <link>https://derry.club/posts/java/randomaccessfile/</link>
      <pubDate>Sun, 04 Dec 2022 18:38:06 +0000</pubDate>
      
      <guid>https://derry.club/posts/java/randomaccessfile/</guid>
      <description>RandomAccessFile This allows you to read from it or write to it as you please. You can replace the content of the file. This cannot achieve by FileInputStream or FileOutputStream.
Create a RandomAccessFile object RandomAccessFile file = new RandomAccessFile(&amp;#34;file.txt&amp;#34;, &amp;#34;rw&amp;#34;); Mode Description r Read mode. Calling write methods will result in an IOException. rw Read and write mode rwd Read and write mode - synchronously. All updates to file content is written to the disk synchronously.</description>
    </item>
    
  </channel>
</rss>
